"""
cbc_bitflip_attack.py

This script implements a CBC (Cipher Block Chaining) bit-flipping attack on a given ciphertext.
"""

from base64 import b64decode, b64encode
import requests

def cbc_bitflip(pos: int, bit: int, data: str) -> str:
    raw = b64decode(data)
    list1 = bytearray(raw)
    list1[pos] = list1[pos] ^ bit
    raw = bytes(list1)
    raw = b64encode(raw)
    return raw.decode("utf-8")

def get_raw_cookie_value(URL: str) -> str:
    session = requests.Session()
    session.get(URL)
    raw_cookie = session.cookies["auth_name"]
    return raw_cookie

def main():
    URL = "http://mercury.picoctf.net:25992/"

    raw_cookie = get_raw_cookie_value(URL)
    for i in range(len(raw_cookie)):
        for j in [1, 2, 4, 8, 16, 32, 64, 128]:
            modified_cookie = cbc_bitflip(i, j, raw_cookie)
            cookie = {'auth_name': modified_cookie}
            response = requests.get(URL, cookies=cookie)
            if "picoCTF" in response.text:
                print("Cookie:", modified_cookie)
                print("\nResponse\n==================\n", response.text)
                break

if __name__ == "__main__":
     main()